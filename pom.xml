<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.fish</groupId>
	<artifactId>MySpringBoot</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.6</version>
		<!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），在本地仓库，最后在远程仓库寻找父项目的pom。 -->
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
<!--		如果两个依赖版本在依赖树里的深度是一样的时候，第一个被声明的依赖将会被使用。-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.2.2</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.2.14</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>

		<!-- 引入本地jar包依赖 -->
<!--		<dependency>-->
<!--			<groupId>本地jar包 groupId 可自定义</groupId>-->
<!--			<artifactId>本地jar包 artifactId 可自定义</artifactId>-->
<!--			<scope>system</scope>-->
<!--			<systemPath>./lib/xxxjdk.jar 本地文件路径</systemPath>-->
<!--		</dependency>-->
	</dependencies>

	<build>
		<!--	Maven 生命周期的每一个阶段的具体实现都是由 Maven 插件实现的	-->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!--	Maven 依赖搜索顺序：localRepository ->	centralRepository ->  remoteRepository -->
	<!--	本地仓库 localRepository: 默认 ${user.home}/.m2/repository	-->
	<!--	中央仓库	centralRepository: 由 Maven 社区提供，可在	${MAVEN_HOME}/conf/settings 设置 mirrors	 -->
	<!--	远程仓库	remoteRepository（代理仓库）	-->
	<repositories>
		<repository>
			<id>alimaven</id>
			<name>aliyun maven</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>central-repos1</id>
			<name>Central Repository 2</name>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
	</repositories>

</project>
